/**
 * @author  Mohi Us Sunnat
 * @date    01.04.24
 * Copyright Â©2024 Sunnat629.dev. All rights reserved.
 */

package dev.sunnat629.openai_android.models.chats

import kotlinx.serialization.SerialName
import kotlinx.serialization.Serializable
import kotlinx.serialization.json.JsonElement

/**
 * Request model for creating a chat completion.
 *
 * @property model The ID of the model to use for generating chat completions.
 * @property messages A list of messages comprising the conversation so far. Each message is represented
 * by a `Message` object, detailing the role (user/assistant) and content of the message.
 * @property maxTokens The maximum number of tokens to generate in the completion.
 * @property temperature Controls randomness in the generation process. Higher values mean more random completions.
 * @property topP An alternative to temperature, controlling diversity via nucleus sampling.
 * @property frequencyPenalty Adjusts likelihood of new tokens based on their frequency in the text so far.
 * @property presencePenalty Adjusts likelihood of new tokens based on their presence in the text so far.
 */
@Serializable
data class CreateChatRequest(
    @SerialName("model") val model: String,
    @SerialName("messages") val messages: List<Message>,
    @SerialName("max_tokens") val maxTokens: Int? = null,
    @SerialName("temperature") val temperature: Double? = 1.0,
    @SerialName("top_p") val topP: Double? = 1.0,
    @SerialName("frequency_penalty") val frequencyPenalty: Double? = 0.0,
    @SerialName("presence_penalty") val presencePenalty: Double? = 0.0
)

@Serializable
data class Message(
    @SerialName("role") val role: String, // "user" or "assistant"
    @SerialName("content") val content: String
)

/**
 * Response model for a chat completion request.
 *
 * @property id A unique identifier for the chat completion.
 * @property objectContent Indicates the type of object, which is "chat.completion" for chat completion responses.
 * @property created The Unix timestamp indicating when the completion was created.
 * @property model The model that was used for generating the completion.
 * @property choices A list of choices for the completion. Typically contains a single choice for chat.
 * Each choice includes the message generated by the assistant, alongside metadata such as the logprobs and finish_reason.
 */
@Serializable
data class CreateChatResponse(
    @SerialName("id") val id: String,
    @SerialName("object") val objectContent: String,
    @SerialName("created") val created: Long,
    @SerialName("model") val model: String,
    @SerialName("choices") val choices: List<ChatChoice>
)

@Serializable
data class ChatChoice(
    @SerialName("message") val message: Message,
    @SerialName("logprobs") val logprobs: JsonElement? = null, // Could be null or contain log probability information
    @SerialName("finish_reason") val finishReason: String,
    @SerialName("index") val index: Int
)